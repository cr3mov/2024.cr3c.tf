import{m as i,C as l,h as o,d as r,M as h,a as c}from"./index.4a8d564d.js";window.Alpine=i;i.store("challenge_store",{data:{view:"",category:""},dataToast:{open:!1,type:""},isSuccess:null,id:null});i.data("ToastNotification",()=>({type:"success",open:!1,content:"Flag accepted",width:100,timer:null,interval:3e3,init(){this.$watch("$store.challenge_store.dataToast",e=>{this.open=e.open,this.type=e.type,this.content=this.type==="error"?"Incorrect":"Flag accepted";let t=this.interval;this.open?this.timer=setInterval(()=>{if(t<=0)return clearInterval(this.timer);t=t-300,this.width=Math.ceil(t/3e3*100)},300):this.width=100})}}));i.data("Hint",()=>({id:null,cost:null,hints:[],html:null,open:!1,open\u0421onfirmationHint:!1,openHint:!1,close(e){e.target.classList.value==="modal__hint"&&(this.closeModal(),this.closeModalConfirmationHint(),this.closeModalHint())},closeModal(){this.open=!1},closeModalConfirmationHint(){this.open\u0421onfirmationHint=!1},async openModalCorfimationHint(e){let t=e.target.id.split("_"),s;this.id=t[0],this.cost=t[1],s=(await l.pages.challenge.loadHint(this.id)).data,s.content?(this.html=s.html,this.open=!1,this.openHint=!0):(this.open\u0421onfirmationHint=!0,this.open=!1)},async addHint(){let e=await l.pages.challenge.loadUnlock(this.id),t,s;e.success?(t=await l.pages.challenge.loadHint(this.id),s=t.data,this.html=s.html,this.openHint=!0):console.log(e.errors),this.open\u0421onfirmationHint=!1},showHint(){this.open=!0},closeModalHint(){this.openHint=!1}}));i.data("Challenge",()=>({id:null,isActivePage:0,next_id:null,submission:"",tab:null,solves:[],response:null,share_url:null,isRequired:!1,isSuccess:!1,async init(){o(),this.id=Number(window.location.pathname.split("/")[2]),this.$watch("$store.challenge_store.isSuccess",e=>{this.isSuccess=e})},async showChallenge(){this.isActivePage=0},async showSolves(){this.solves=await l.pages.challenge.loadSolves(this.id),this.solves.forEach(e=>(e.date=r(e.date).format("MMMM Do, h:mm:ss A"),e)),this.isActivePage=1},getNextId(){return i.store("challenge").data.next_id},async nextChallenge(){let e=h.getOrCreateInstance("[x-ref='challengeWindow']");e._element.addEventListener("hidden.bs.modal",t=>{i.nextTick(()=>{this.$dispatch("load-challenge",this.getNextId())})},{once:!0}),e.hide()},async getShareUrl(){let e={type:"solve",challenge_id:this.id};const a=(await(await l.fetch("/api/v1/shares",{method:"POST",body:JSON.stringify(e)})).json()).data.url;this.share_url=a},copyShareUrl(){navigator.clipboard.writeText(this.share_url);let e=c.getOrCreateInstance(this.$el);e.enable(),e.show(),setTimeout(()=>{e.hide(),e.disable()},2e3)},getTextButton(e){return e?"Solved":"Submit"},async submitChallenge(){this.isSuccess||(this.response=await l.pages.challenge.submitChallenge(this.id,this.submission),await this.renderSubmissionResponse())},async renderSubmissionResponse(){this.response.data.status==="correct"?(this.submission="",this.isSuccess=!0,i.store("challenge_store").dataToast.open=!0,i.store("challenge_store").dataToast.type="success",i.store("challenge_store").isSuccess=this.isSuccess):this.response.data.status==="incorrect"&&(this.isRequired=!0,i.store("challenge_store").dataToast.open=!0,i.store("challenge_store").dataToast.type="error",setTimeout(()=>{this.isRequired=!1},3e3)),setTimeout(()=>{i.store("challenge_store").dataToast.open=!1},3600),this.$dispatch("load-challenges")}}));i.data("ChallengeBoard",()=>({loaded:!1,challenges:[],challenge:null,category:null,id:null,isSuccess:!1,firstLoading:!0,async init(){if(this.challenges=await l.pages.challenges.getChallenges(),this.loaded=!0,this.$watch("$store.challenge_store.isSuccess",e=>{if(this.firstLoading){this.firstLoading^=1;return}this.loadChallenges()}),window.location.hash){let e=decodeURIComponent(window.location.hash.substring(1)),t=e.lastIndexOf("-");if(t>=0){let a=[e.slice(0,t),e.slice(t+1)][1];await this.loadChallenge(a)}}new Swiper(".mySwiper",{slidesPerView:"auto",spaceBetween:0,pagination:{el:".swiper-pagination",clickable:!0}})},getCategories(){let e=[];return this.challenges.forEach(t=>{let s=e.find(a=>a.category===t.category);s===void 0&&e.push({category:t.category,items:[]}),s=e.find(a=>a.category===t.category),s.items.push(t)}),e},getCategoryChallenges(){let e=this.getCategories();if(e.length===0)return[];this.id=Number(window.location.pathname.split("/")[2]);let t="",s=[];return e.forEach(a=>{for(let n=0;n<a.items.length;n++)if(a.items[n].id===this.id){t=a.category,i.store("challenge_store").isSuccess=a.items[n].solved_by_me;break}}),s=e.find(a=>a.category===t),s!=null&&s.items?s.items:[]},getChallenges(e){let t=this.challenges;e!==null&&(t=this.challenges.filter(s=>s.category===e));try{const s=l.config.themeSettings.challenge_order;if(s){const a=new Function(`return (${s})`);t.sort(a())}}catch(s){console.log("Error running challenge_order function"),console.log(s)}return t},async loadChallenges(){this.challenges=await l.pages.challenges.getChallenges()},async loadChallenge(e){await l.pages.challenge.displayChallenge(e,t=>{this.category=t.data.category})}}));i.start();
